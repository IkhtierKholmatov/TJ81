{Application 'LISTELIG' logic file generated by CSPro }
PROC GLOBAL

{-------------------------------------------------------------------------}
{          This application generates an HTML report file                 }
{ The application uses functions declared in \Library\HTMLFunctions.apc.  }
{ All functions declared in that file start with the letters HTML_        }
{ It also uses the HTMLFile file declaration and a two arrays of strings: }
{    -CellValues(). Contains the values of an entire row for a report     }
{    -CellAlign().  Specifies the n cell that is left aligned             }
{-------------------------------------------------------------------------}

  string  xstring3, xstring4, xstring5;
  numeric xhhnum, xcluster, i, j, womelig, manelig, chielig;

  array string icdob(100);
  array string icage(100); 
  array string wpreg(100);

PROC FL_CNULL
preproc

  { converts parameter to numbers  }
  xcluster = tonumber( sysparm()[1:4] );   { cluster number }
  xhhnum   = tonumber( sysparm()[5:4] );   { household number }
  SetLanguage( GetLanguage() );
  open( TJHH80 );
  
  { set the name for the HTML file }
  HTML_InitAlign();
  HTMLName = ".\ListElig.html";
  if FileExist( HTMLName ) then
    FileDelete( HTMLName )
  endif;
  setfile( HTMLFile, HTMLName, create );

  AHCLUST  = xcluster;
  AHNUMBER = xhhnum;
  { list of individuals and children eligible for individual and height & weight }
  if loadcase( TJHH80, AHCLUST, AHNUMBER ) then
    zstring1 = MakeText( tr("Eligible Individuals in Cluster: %04d Household: %04d"), xcluster, xhhnum );
    zstring2 = tr("Women/men eligible for individual interview");
    xstring3 = tr("Children eligible for biomarkers");
	CellValues(1) = tr("Line");
	CellValues(2) = tr("Sex");
	CellValues(3) = tr("AgeHH");
	CellValues(4) = tr("Name");
	CellValues(5) = tr("Age");
	CellValues(6) = tr("Marital Status");
	CellValues(7) = tr("Pregnant");
	CellValues(8) = tr("Date of birth");
    { specify columns that are left aligned, strings are left aligned }
    CellAlign(1) = 2;  // column 2 is literal sex 
    CellAlign(2) = 4;  // column 4 name 
    CellAlign(3) = 6;  // column 5 marital status
    CellAlign(4) = 7;  // column 7 currently pregnant
    HTML_Header( CellAlign, zstring1 );  // generates a general HTML header
	
	{ first determine if there eligible individuals at all }
	womelig = count( AHSEC01 where AH09 <> 0 );
	manelig = count( AHSEC01 where AH10 <> 0 );
	chielig = count( AHSEC01 where AH11 <> 0 );
    { if appropriate generates the HTML table script with the column headers }
	if chielig then
      HTML_BeginTable( CellValues, "", 8 );
    elseif womelig | manelig then
      HTML_BeginTable( CellValues, "", 8 );
	else
      HTML_Paragraph( tr("There are no individuals eligible for individual survey neither children eligible for biomarkers") );
	endif;

    { initialize array of children's birth dates, ages and woman's pregnancy }
    do i = 1 while i <= maxocc(AHSEC01)
      icdob(i) = "";
	  icage(i) = "";
	  wpreg(i) = "";
    enddo;

    for i in record AHSEC01 do
      if AH09 <> 0 then 
        ALINE = AH09;
		if loadcase(TJIN80, AHCLUST,AHNUMBER,ALINE) then 
          wpreg(ALINE) = GetValueLabel(A232);
          icdob(ALINE) = edit("99",A110M) + "/" + edit("9999",A110Y);
          icage(ALINE) = edit("99",A111);
          for j in record AWSEC2B do
            if A227 in 1:AHMEMBER then 
              icdob(A227)  = edit("99",A220D) + "/" + edit("99",A220M) + "/" + edit("9999",A220Y);
			  icage(A227) = edit("99",A225);
            endif;
          enddo;
        endif;
	  endif;
      if AH10 <> 0 then 
        ALINE = AH10;
		if loadcase(TJIN80, AHCLUST,AHNUMBER,ALINE) then 
          wpreg(ALINE) = "";
          icdob(ALINE) = edit("99",AM110M) + "/" + edit("9999",AM110Y);
          icage(ALINE) = edit("99",AM111);
        endif;
      endif;		
    enddo;
	
    { women/men eligible for individual interview }
    if womelig | manelig then
	  HTML_Subtitle( zstring2, 8 );
      for i in record AHSEC01 do
        if AH09 <> 0 | AH10 <> 0 then
          { populates the elements of a row based on household member information }
          CellValues(1) = edit("99", AH01 );
          CellValues(2) = GetValueLabel( AH04 );
          CellValues(3) = edit("99", AH07 );
          CellValues(4) = AH02;
		  if length(icage(i)) then
            CellValues(5) = icage(i);
	      else		
            CellValues(5) = "BLANK";
          endif;
          xstring4 = GetValueLabel( AH08 );
		  do j = 1 while xstring4[j:1] <> " " enddo;
		  xstring5 = xstring4[1:j-1]; 
          CellValues(6) = xstring5;
          CellValues(7) = "BLANK";
		  if length(icdob(i)) then
            CellValues(8) = icdob(i);
	      else		
            CellValues(8) = "BLANK";
          endif;
          HTML_OneRow( CellValues, 8 );   // generates the HTML script for a row with relevant household data
        endif;
      enddo;
    endif;
    
	{ children eligible for biomarkers }
    if chielig then
	  HTML_Subtitle( xstring3, 8 );
      for i in record AHSEC01 do
        if AH11 <> 0 then
          { populates the elements of a row based on household member information }
          CellValues(1) = edit("99", AH01 );
          CellValues(2) = GetValueLabel( AH04 );
          CellValues(3) = edit("99", AH07 );
          CellValues(4) = AH02;
		  if length(icage(i)) then
            CellValues(5) = icage(i);
	      else		
            CellValues(5) = "BLANK";
          endif;
          CellValues(6) = "BLANK";
          CellValues(7) = "BLANK";
		  if length(icdob(i)) then
            CellValues(8) = icdob(i);
	      else		
            CellValues(8) = "BLANK";
          endif;
          HTML_OneRow( CellValues, 8 );   // generates the HTML script for a row with relevant household data
        endif;
      enddo;
    endif;
	
	{ women eligible for biomarkers }
    if womelig then
      HTML_Subtitle( tr("Women eligible for biomarkers"), 8 );
      for i in record AHSEC01 do
        if AH09 <> 0 then
          { populates the elements of a row based on household member information }
          CellValues(1) = edit("99", AH01 );
          CellValues(2) = GetValueLabel( AH04 );
          CellValues(3) = edit("99", AH07 );
          CellValues(4) = AH02;
		  if length(icage(i)) then
            CellValues(5) = icage(i);
	      else		
            CellValues(5) = "BLANK";
          endif;
          zstring1 = tr("Never in union");
          if AH08 <> 4 then zstring1 = tr("Other") endif;
          CellValues(6) = zstring1;
		  if length(wpreg(i)) then
            CellValues(7) = wpreg(i);
	      else		
            CellValues(7) = "BLANK";
          endif;
		  if length(icdob(i)) then
            CellValues(8) = icdob(i);
	      else		
            CellValues(8) = "BLANK";
          endif;
          HTML_OneRow( CellValues, 8 );   // generates the HTML script for a row with relevant household data
        endif;
      enddo;
    endif;
	
	{ men eligible for biomarkers }
    if count( TJHH80.AHSEC01 where AH10 <> 0 ) then
      HTML_Subtitle( tr("Men eligible for biomarkers"), 8 );
      for i in record AHSEC01 do
        if AH10 <> 0 then
          { populates the elements of a row based on household member information }
          CellValues(1) = edit("99", AH01 );
          CellValues(2) = GetValueLabel( AH04 );
          CellValues(3) = edit("99", AH07 );
          CellValues(4) = AH02;
		  if length(icage(i)) then
            CellValues(5) = icage(i);
	      else		
            CellValues(5) = "BLANK";
          endif;
          zstring1 = tr("Never in union");
          if AH08 <> 4 then zstring1 = tr("Other") endif;
          CellValues(6) = zstring1;
          CellValues(7) = "BLANK";
		  if length(icdob(i)) then
            CellValues(8) = icdob(i);
	      else		
            CellValues(8) = "BLANK";
          endif;
          HTML_OneRow( CellValues, 8 );   // generates the HTML script for a row with relevant household data
        endif;
      enddo;
    endif;
	{ if any individual or child found, close table }
	if womelig | manelig | chielig then
      HTML_EndTable();
	endif;
  else
    HTML_Paragraph( tr("The household selected was not found in this cluster") );
  endif;
  HTML_End();
  close( TJHH80 );
  view( "file://" + pathname(application) + HTMLName );
  stop(1);

