PROC GLOBAL
{ program to list households/individuals collected by interviewer }

{-------------------------------------------------------------------------}
{          This application generates an HTML report file                 }
{ The application uses functions declared in \Library\HTMLFunctions.apc.  }
{ All functions declared in that file start with the letters HTML_        }
{ It also uses the HTMLFile file declaration and a two arrays of strings: }
{    -CellValues(). Contains the values of an entire row for a report     }
{    -CellAlign().  Specifies the n cell that is left aligned             }
{-------------------------------------------------------------------------}

  string   xresult;
  string   fnameHH, fnameIN;              { to extract file name from household and individual dictionaries }
  alpha(4) xcluster;                     { parameter from main menu }

  array arrayhh(100);                      { to check that all individuals are linked to households }
  array arraywm(100);

  numeric x, i, j, found, chhw, wmhw, mnhw;

PROC FL_CNULL
preproc

  xcluster = sysparm()[1:4];        { cluster number from DCMenu}
  SetLanguage( GetLanguage() );

  { initialize arrays to check that all women are linked to a household }
  do i = 1 while i <= 100
    arrayhh(i) = 0;
    arraywm(i) = 0;
  enddo;
  fnameHH = filename( TJHH80 );     { get the file name from the household dictionary }
  fnameIN = filename( TJIN80 );     { get the file name from the individual dictionary }

  { set the name for the HTML file }
  HTML_InitAlign();
  HTMLname = "LstQuest.html";
  if FileExist( HTMLname ) then
    FileDelete( HTMLname )
  endif;
  setfile( HTMLFile, HTMLname, create );

  { initialize the report headings }
  zstring1 = MakeText( tr("Status for cluster: %s"), xcluster );
  zstring2 = tr("Interviews collected in cluster");
  CellValues(1) = tr("HH");
  CellValues(2) = tr("Address/Name");
  CellValues(3) = tr("Result");
  CellValues(4) = tr("Visits");
  CellValues(5) = tr("Biomarkers");
  { specify columns that are left aligned, strings are left aligned }
  CellAlign(1) = 2;  // column 2 is household address/name 
  CellAlign(2) = 3;  // column 3 is result of the interview
  HTML_Header( CellAlign, zstring1 );  // generates a general HTML header

  { go over each household }
  open( TJHH80 );
  if !FileEmpty( fnameHH ) then    { it is important because some interviewers may not have household questionnaires }
    HTML_BeginTable( CellValues, zstring2, 5 );  // generates the HTML table script with the column headers
    while loadcase( TJHH80 ) do
      if AHRESULT = 1 & partialcs( 1, AHCLUST, AHNUMBER, 0, fnameHH  ) then
        xresult = edit("9",AHRESULT) + tr("-Partial")
      elseif AHRESULT <> 1 then
        xresult = edit("9",AHRESULT) + tr("-Incomplete")
      else
        xresult = edit("9",AHRESULT) + tr("-Complete")
      endif;

      mnhw    = 0;
      wmhw    = 0;
      chhw    = 0;
      x       = 0;
      if AHRESULT = 1 then

        { height/weight and hemoglobin for women }
        wmhw = count( TJHH80.AHSEC01 where AH09 );

        { height/weight and hemoglobin for men }
        mnhw = count( TJHH80.AHSEC01 where AH10 );

        { height/weight and hemoglobin for children }
        chhw = count( TJHH80.AHSEC01 where AH11 );

        { children/women/men measured }
        x = count(TJHH80.ABSEC01 where AB106 <> notappl) + 
		    count(TJHH80.ABSEC02 where AB205 <> notappl) + 
			count(TJHH80.ABSEC03 where AB305 <> notappl); 
      endif;			
	  { populates the elements of a row based on household information }
      CellValues(1) = edit("9999", AHNUMBER);
      CellValues(2) = AHADDRESS[1:30];
      CellValues(3) = xresult;
      CellValues(4) = edit("9", AHVISITS);
      CellValues(5) = edit("99", wmhw+mnhw+chhw) + "-" + edit("99", x);
      HTML_OneRow( CellValues, 5 );   // generates the HTML script for a row with relevant household data

      if AHRESULT = 1 then  { check individuals only if they are part of completed households }

        { check individual questionnaires in the household in the loop }
        for i in record AHSEC01 do
          if AH09 | AH10 then
            if AH09 then
              ALINE   = AH09;
              zstring1 = tr("W-") + strip(AH02);
            else
              ALINE = AH10;
              zstring1 = tr("M-") + strip(AH02);
            endif;
            if loadcase( TJIN80, AHCLUST, AHNUMBER, ALINE ) then
              { populate array of individuals to check at the end if all of them are linked to a household }
              do j = 1 while j <= 100 & arrayhh(j)
                if arrayhh(j) = AHNUMBER & arraywm(j) = ALINE then
				  errmsg( 010, ALINE, AHNUMBER );
                endif;
              enddo;
              if j <= 100 then
                arrayhh(j) = AHNUMBER;
                arraywm(j) = ALINE;
              endif;

              if ARESULT = 1 & partialcs( 2, ACLUSTER, ANUMBER, ALINE, fnameIN ) then
                xresult = edit("9",ARESULT) + tr("-Partial")
              elseif ARESULT <> 1 then
                xresult = edit("9",ARESULT) + tr("-Incomplete")
              else
                xresult = edit("9",ARESULT) + tr("-Complete")
              endif;
        	  { populates the elements of a row based on individual information }
              CellValues(1) = edit("  99", ALINE);
              CellValues(2) = zstring1;
              CellValues(3) = xresult;
              CellValues(4) = edit("9", AVISITS);
              CellValues(5) = "BLANK";
              HTML_OneRow( CellValues, 5 );  // generates the HTML script for a row with relevant individual data

            else
        	  { populates the elements of a row for an individual that hasn't been visited }
              xresult = tr("Not visited");
              CellValues(1) = edit("  99", ALINE);
              CellValues(2) = zstring1;
              CellValues(3) = xresult;
              CellValues(4) = "BLANK";
              CellValues(5) = "BLANK";
              HTML_OneRow( CellValues, 5 );  // generates the HTML script for a row with relevant individual data
            endif;
          endif;
        enddo;
      endif;
    enddo;
	HTML_EndTable();
  else
    HTML_Paragraph( tr("There are no households for the cluster in this machine") );
  endif;

  { go sequentially over file with individuals to check if they were marked }
  { at the time of loading eligibles in the household roster loop           }
  close( TJIN80 );
  open( TJIN80 );
  if !FileEmpty( fnameIN ) then  { it is important because some interviewers may not have individual questionnaires }
    while loadcase( TJIN80 ) do
      found = 0;
      do j = 1 while j <= 100 & !found
        if arrayhh(j) = ANUMBER & arraywm(j) = ALINE then
          found = 1;
        endif;
      enddo;
      if !found then
        HTML_Paragraph( MakeText(tr("Individual %02d in household %04d is part of a household that belongs to another interviewer"), ALINE, ANUMBER) );
      endif;
    enddo;
  endif;
  HTML_End();
  view( "file://" + pathname(application) +  HTMLName );
  stop(1);
