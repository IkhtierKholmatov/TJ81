{Application 'LISTELIG' logic file generated by CSPro }
PROC GLOBAL

{-------------------------------------------------------------------------}
{          This application generates an HTML report file                 }
{ The application uses functions declared in \Library\HTMLFunctions.apc.  }
{ All functions declared in that file start with the letters HTML_        }
{ It also uses the HTMLFile file declaration and a two arrays of strings: }
{    -CellValues(). Contains the values of an entire row for a report     }
{    -CellAlign().  Specifies the n cell that is left aligned             }
{-------------------------------------------------------------------------}

  string  xstring3;
  numeric xhhnum, xcluster, i, womelig, manelig, chielig;
  numeric chln; //!!! used to find child record in women's qre to show dob
  array chwom(50,2); // array to hold mapping of children to mothers !!!

PROC FL_CNULL
preproc

  { converts parameter to numbers  }
  xcluster = tonumber( sysparm()[1:4] );   { cluster number }
  xhhnum   = tonumber( sysparm()[5:4] );   { household number }
  SetLanguage( GetLanguage() );
  open( TJHH80 );
  
  { set the name for the HTML file }
  HTML_InitAlign();
  if getos() = 20 then
    HTMLName = "./ListElig.html";
  else
    HTMLName = ".\ListElig.html";
  endif;
  if FileExist( HTMLName ) then
    FileDelete( HTMLName )
  endif;
  setfile( HTMLFile, HTMLName, create );

  QHCLUST  = xcluster;
  QHNUMBER = xhhnum;
  // get location information from sample file !!
  loadcase(CLUSTERS, QHCLUST);

  { list of individuals and children eligible for individual and height & weight }
  if loadcase( TJHH80, QHCLUST, QHNUMBER ) then
    if noccurs(TJHH80.QHSEC01X) then
      zstring1 = MakeText( tr("Eligible Individuals in Cluster: %04d Household: %04d %s %s in Sub Location %s"), xcluster, xhhnum, QHFIRSTN(1), QHLASTN(1) , YCITYN );
    else
      zstring1 = MakeText( tr("Eligible Individuals in Cluster: %04d Household: %04d %s"), xcluster, xhhnum );
    endif;
    zstring2 = tr("Women/men eligible for individual interview");
    xstring3 = tr("Children eligible for biomarkers");
	CellValues(1) = tr("Line");
	CellValues(2) = tr("Sex");
	CellValues(3) = tr("Age");
        CellValues(4) = tr("Name");
	CellValues(5) = tr("Date of birth");
	CellValues(6) = tr("Marital Status");
    { specify columns that are left aligned, strings are left aligned }
    CellAlign(1) = 2;  // column 2 is literal sex 
    CellAlign(2) = 4;  // column 4 name 
    CellAlign(3) = 6;  // column 5 marital status
    HTML_Header( CellAlign, zstring1 );  // generates a general HTML header
	
	{ first determine if there eligible individuals at all }
	womelig = count( QHSEC01 where QH09 <> 0 );
{	manelig = count( QHSEC01 where QH10 <> 0 );} {No elegible man in TJ}
	chielig = count( QHSEC01 where QH11 <> 0 );
    { if appropriate generates the HTML table script with the column headers }
    if womelig | manelig then
      HTML_BeginTable( CellValues, "", 6 );
	elseif chielig then
      HTML_BeginTable( CellValues, "", 6 );
	else
      HTML_Paragraph( tr("There are no individuals eligible for individual survey or any members eligible for biomarkers") );
	endif;
	
    { women/men eligible for individual interview }
    if womelig | manelig then
	  HTML_Subtitle( zstring2, 6 );
      for i in record QHSEC01 do
        if QH09 <> 0 {| QH10 <> 0 }then {No elegible man in TJ}
          { populates the elements of a row based on household member information }
          CellValues(1) = edit("99", QH01 );
          CellValues(2) = GetValueLabel( QH04 );
          CellValues(3) = edit("99", QH07 );
          CellValues(4) = QH02;
          CellValues(5) = "BLANK";
          CellValues(6) = GetValueLabel( QH08 );
          HTML_OneRow( CellValues, 6 );   // generates the HTML script for a row with relevant household data
        endif;
      enddo;
    endif;
    
	{ children eligible for biomarkers }
    if chielig then
      HTML_Subtitle( xstring3, 6 );
      for i in record QHSEC01 do
        if QH11 <> 0 then
          // look for child record in woman's questionnaire 
          chln = 0;
          open(TJIN80);
          forcase TJIN80 where QNUMBER = QHNUMBER do
            chln = seek(Q227 = QH11);
            if chln then 
              break;
            endif;
          enddo;
          close(TJIN80);
          { populates the elements of a row based on household member information }
          CellValues(1) = edit("99", QH01 );
          CellValues(2) = GetValueLabel( QH04 );
          CellValues(3) = edit("99", QH07 );
          CellValues(4) = QH02;
          if chln then
            CellValues(5) = maketext("%02d-%02d-%04d", Q220D(chln), Q220M(chln), Q220Y(chln));
          else
            CellValues(5) = "BLANK";
          endif;
          CellValues(6) = "BLANK";
          HTML_OneRow( CellValues, 6 );   // generates the HTML script for a row with relevant household data
        endif;
      enddo;
    endif;
	
	{ women eligible for biomarkers }
    if womelig then
      HTML_Subtitle( tr("Women eligible for biomarkers"), 6 );
      for i in record QHSEC01 do
        if QH09 <> 0 then
          { populates the elements of a row based on household member information }
          CellValues(1) = edit("99", QH01 );
          CellValues(2) = GetValueLabel( QH04 );
          CellValues(3) = edit("99", QH07 );
          CellValues(4) = QH02;
          CellValues(5) = "BLANK";
          zstring1 = tr("Never in union");
          if QH08 <> 4 then zstring1 = tr("Other") endif;
          CellValues(6) = zstring1;
          HTML_OneRow( CellValues, 6 );   // generates the HTML script for a row with relevant household data
        endif;
      enddo;
    endif;
	
	{
	{ men eligible for biomarkers }
    if count( TJHH80.QHSEC01 where QH10 <> 0 ) then
      HTML_Subtitle( tr("Men eligible for biomarkers"), 6 );
      for i in record QHSEC01 do
        if QH10 <> 0 then
          { populates the elements of a row based on household member information }
          CellValues(1) = edit("99", QH01 );
          CellValues(2) = GetValueLabel( QH04 );
          CellValues(3) = edit("99", QH07 );
          CellValues(4) = QH02;
          CellValues(5) = "BLANK";
          zstring1 = tr("Never in union");
          if QH08 <> 4 then zstring1 = tr("Other") endif;
          CellValues(6) = zstring1;
          HTML_OneRow( CellValues, 6 );   // generates the HTML script for a row with relevant household data
        endif;
      enddo;
    endif;
	} {No elegible man in TJ}
	
	{ if any individual or child found, close table }
	if womelig | manelig | chielig then
      HTML_EndTable();
	endif;
  else
    HTML_Paragraph( tr("The household selected was not found in this cluster") );
  endif;
  HTML_End();
  close( TJHH80 );
  close( CLUSTERS );
  view( "file://" + pathname(application) + HTMLName );
  stop(1);

