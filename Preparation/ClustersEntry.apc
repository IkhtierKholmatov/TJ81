{Application 'CLUSTERSENTRY' logic file generated by CSPro }
PROC GLOBAL

  FILE fstate;

  numeric x, xurbrur, xstate, xregion, xdistrict, xcity, addmode;

  string xstaten, xregionn, xdistrictn, xcityn;
  string heading;
  string line;

  { confirm if the change of code is valid }
  function ConfirmChange( string varname )
    heading = tr("Do you want to change the code for") + " " + varname;
    x = accept( heading, "1-Yes", "2-No" );
    ConfirmChange = ( x = 1 );
  end;

  { function to reset codes carried from previous entry depending on the geographical hierarchy }
  { Value 4 - all variables are reset at the begining (initialization)    }
  {       3 - when region   changes: state, district and city must change }
  {       2 - when state    changes: district and city must change        }
  {       1 - when district changes: city must change                     }
  function ResetCodes( value )
    if value >= 4 then
      xurbrur    = default;
      xregion    = default;
      xregionn   = "";
    endif;
    if value >= 3 then
      xstate     = default;
      xstaten    = "";
    endif;
    if value >= 2 then
      xdistrict  = default;
      xdistrictn = "";
    endif;
    if value >= 1 then
      xcity      = default;
      xcityn     = "";
    endif;
  end;

PROC CLUSTERS_FF
preproc

  SetLanguage( getlanguage() );
  ResetCodes( 4 );
  addmode = ( demode() = add );

  { reads the file with the last characteristics entered in the clusters file }
  setfile( fstate, ".\fstate.dat" );
  if addmode & FileExist( fstate ) then
    FileRead( fstate, line );
    xurbrur    = tonumber( line[1:3] );          { !!! adjust positions based on how they were written in the last instruction in this app }
    xregion    = tonumber( line[4:3] );          { !!! }
    xregionn   = line[7:25];                     { !!! }
    xstate     = tonumber( line[32:3] );         { !!! }
    xstaten    = line[35:25];                    { !!! }
    xdistrict  = tonumber( line[60:3] );         { !!! }
    xdistrictn = line[63:25];                    { !!! }
    xcity      = tonumber( line[88:3] );         { !!! }
    xcityn     = line[91:25];                    { !!! }
  endif;
  {  errmsg( "urbrur=%d region=%d-%s state=%d-%s district=%d-%s city=%d-%s", xurbrur, xregion, xregionn, xstate, xstaten, xdistrict, xdistrictn, xcity, xcityn ); }

  set attributes( CLUSTERS ) assisted off ( variable(title) );

PROC YURBRUR
  if addmode then
    if xurbrur = default then
      xurbrur = $
    elseif $ <> xurbrur then
      errmsg( 001, GetLabel($), xurbrur );
      if ConfirmChange( GetLabel($) ) then
        xurbrur = $
      else
        reenter
      endif;
    endif;
  endif;

PROC YREGION
  if addmode then
    if xregion = default then
      xregion = $
    elseif $ <> xregion then
      errmsg( 1, GetLabel($), xregion );
      if ConfirmChange( GetLabel($) ) then
        xregion  = $;
        xregionn = "";
        ResetCodes( 3 );  { parameter 3 so that state, district and city are rest }
      else
        reenter
      endif;
    endif;
  endif;

PROC YREGIONN
preproc
  if addmode then
    if length( strip(xregionn) ) then
      $ = xregionn;
      noinput
    endif;
  endif;

postproc
  if !length( strip($) ) then
    errmsg( 2, GetLabel($) );
    reenter
  else
    xregionn = $
  endif;

PROC YSTATE
  if addmode then
    if xstate = default then
      xstate = $
    elseif $ <> xstate then
      errmsg( 1, GetLabel($), xstate );
      if ConfirmChange( GetLabel($) ) then
        xstate  = $;
        xstaten = "";
        ResetCodes( 2 );  { parameter 2 so that district and city are rest }
      else
        reenter
      endif;
    endif;
  endif;

PROC YSTATEN
preproc
  if addmode then
    if length( strip(xstaten) ) then
      $ = xstaten;
      noinput
    endif;
  endif;

postproc
  if !length( strip($) ) then
    errmsg( 2, GetLabel($) );
    reenter
  else
    xstaten = $
  endif;

PROC YDISTRICT
  if addmode then
    if xdistrict = default then
      xdistrict = $
    elseif $ <> xdistrict then
      errmsg( 1, GetLabel($), xdistrict );
      if ConfirmChange( GetLabel($) ) then
        xdistrict  = $;
        xdistrictn = "";
        ResetCodes( 1 );  { parameter 1 so that city are rest }
      else
        reenter
      endif;
    endif;
  endif;

PROC YDISTRICTN
preproc
  if addmode then
    if length( strip(xdistrictn) ) then
      $ = xdistrictn;
      noinput
    endif;
  endif;

postproc
  if !length( strip($) ) then
    errmsg( 2, GetLabel($) );
    reenter
  else
    xdistrictn = $
  endif;

PROC YCITY
  if addmode then
    if xcity = default then
      xcity = $
    elseif $ <> xcity then
      errmsg( 1, GetLabel($), xcity );
      if ConfirmChange( GetLabel($) ) then
        xcity  = $;
        xcityn = "";
      else
        reenter
      endif;
    endif;
  endif;

PROC YCITYN
preproc
  if addmode then
    if length( strip(xcityn) ) then
      $ = xcityn;
      noinput
    endif;
  endif;

postproc
  if !length( strip($) ) then
    errmsg( 2, GetLabel($) );
    reenter
  else
    xcityn = $
  endif;

PROC YTOTHH
preproc
  { if the number of households per cluster is a constant, consider making this variable protected }
  if YURBRUR = 1 then
    $ = 26;
  else
    $ = 30;
  endif;

postproc
  if addmode & accept( tr("Do you want to enter more clusters?"), tr("1-Yes"), tr("2-No") ) <> 1 then
    setfile( fstate, ".\fstate.dat", create );
    { !!! make sure that the fields written have the same positions as when reading at the begining }
    FileWrite( fstate, concat( edit("ZZ9",YURBRUR), edit("ZZ9",YREGION), YREGIONN, edit("ZZ9",YSTATE), YSTATEN,
                               edit("ZZ9",YDISTRICT), YDISTRICTN, edit("ZZ9",YCITY), YCITYN ) );
    stop(1);
  endif;
