{Application 'LISTELIG' logic file generated by CSPro }
PROC GLOBAL

{-------------------------------------------------------------------------}
{          This application generates an HTML report file                 }
{ The application uses functions declared in \Library\HTMLFunctions.apc.  }
{ All functions declared in that file start with the letters HTML_        }
{ It also uses the HTMLFile file declaration and a two arrays of strings: }
{    -CellValues(). Contains the values of an entire row for a report     }
{    -CellAlign().  Specifies the n cell that is left aligned             }
{-------------------------------------------------------------------------}

  string  xstring3, xintnum;
  numeric x, xcluster, i, totHH, totHHNotYetInterviewed, totHHInterviewed, totHHCompleted, totHHSelected;
  numeric PercentInterviewed, choice, selectSC, showSC, tag, j, ShowCheckHH, dd, ViewOnly;
  numeric xlong, xlat;
  numeric e;
  string allhh, reintdata;
  array string CompareHH(50,2);
  
  
  function CleanCompareHH()
        do varying i = 1 while i <= 50 
                CompareHH(i,1) = "";
                CompareHH(i,2) = "";
        enddo;
  end;

PROC FL_CNULL
preproc

  { converts parameter to numbers  }
  xcluster = tonumber( sysparm()[1:4] );   { cluster number }
  xintnum  = sysparm()[5:4];   { interviewer number }
  allhh  = sysparm("allhh"); { location of work folder  }
  reintdata = FileName(TJHH80);  { save file name for reinterviews }

  open( HHFORINT );
  totHH                  = 0;
  totHHNotYetInterviewed = 0; 
  totHHCompleted         = 0;
  totHHSelected          = 0;
  totHHInterviewed       = 0;
  PercentInterviewed     = 0;
  selectSC               = 0;
  showSC                 = 1;
  ShowCheckHH            = 0;
  
  { set the name for the HTML file }
  HTML_InitAlign();
  HTMLName = "ListRI.html";

  if FileExist( HTMLName ) then
    FileDelete( HTMLName )
  endif;
  setfile( HTMLFile, HTMLName, create );
  SSAMPLE = xcluster;
  // load supervisor control file
  if !loadcase(CONTSUP, SSAMPLE) then
    errmsg("cluster %d not found in supervisor control file");
  endif;
  
  
  zstring2 = MakeText( tr("Liste des ménages") );
  CellValues(1) = tr("Household");
  CellValues(2) = tr("Struct.");
  CellValues(3) = tr("Address");
  CellValues(4) = tr("Head");
  CellValues(5) = tr("RA");
  CellValues(6) = tr("Result of reinterview");
  { specify columns that are left aligned, strings are left aligned }
  CellAlign(1) = 3;  // column 3 is Address 
  CellAlign(2) = 4;  // column 4 HH head name 
  CellAlign(3) = 6;  // column 5 Result
  HTML_Header( CellAlign, zstring1 );  // generates a general HTML header

  HTML_BeginTable( CellValues, "", 6 );

  setfile(TJHH80, allhh, update);
  do varying i = 1 while i <= maxocc(SALLHH)
        if SREINTERV(i) then
          QHCLUST  = SSAMPLE;
          QHNUMBER = SNUMBER(i);
          if !loadcase(TJHH80, QHCLUST, QHNUMBER) then
            e = errmsg("Selected Household %d not found in household data ", QHNUMBER);
          endif;
          if !loadcase(HHFORINT, QHNUMBER) then
            e = errmsg("Selected Household %d not found in sample data ", QHNUMBER);
          endif;

          if !e then
            CellValues(1) = edit("9999",QHNUMBER);
            CellValues(2) = edit("9999",VSTRUCT);
            CellValues(3) = VADDRESS;
            CellValues(4) = QHFIRSTN(1) + " " + QHLASTN(1);
            CellValues(5) = edit("9999",QHINTNUM);
            // check status of interview from eligibles.dat
            ZCLUSTER = SSAMPLE;
            ZNUMBER  = SNUMBER(i);
            ZLINE    = notappl;
            if loadcase(ELIGINDV, ZCLUSTER, ZNUMBER, ZLINE) then
              CellValues(6) = ZSTATUS
            else
              errmsg("Household %d not found in eligibles file");
            endif;
            HTML_OneRow( CellValues, 6 );   // generates the HTML script for a row with relevant household data
          endif;
        endif;
  enddo;
  close(TJHH80);
    HTML_EndTable();
  
  // {Show the comparison results}
  numeric first = 1;
  forcase ELIGINDV do
    if ZSTATUSC = 1 then
      if first then
        zstring2 = MakeText( tr("Comparison of original and re-interview data") );
        HTML_Paragraph( zstring2 );
        first = 0;
      endif;
      CleanCompareHH();
      QHCLUST  = ZCLUSTER;
      QHNUMBER = ZNUMBER;

      // first case is the reinterview
      setfile(TJHH80, reintdata, update);
      if !loadcase(TJHH80, QHCLUST, QHNUMBER) then
        errmsg("reinterview household %d not found", QHNUMBER );
      endif;
      CompareHH(1,1) = edit("9999",QHNUMBER); {HH number in Main data }
      CompareHH(2,1) = tr( "Reinterview" );   {Main questionnaire }
      CompareHH(3,1) = edit("Z9",count(QHSEC01X where QHLIVES = 1));   { total usual residents }
      CompareHH(4,1) = edit("Z9",count(QHSEC01X where QHLIVES <> 1 & QHSTAYED = 1));   { total visitors }
      CompareHH(5,1) = edit("Z9",QHWOMEN);    {Total number of women 15-49 }
      CompareHH(6,1) = edit("Z9",count(QHSEC01X where QHAGE <= 5));    {Total number of children 0-5 }
      CompareHH(7,1) = getValuelabel (QH128);    {Has animals}
      // CompareHH(6,1) = getValuelabel (QH101);    {Drinking water}
      // CompareHH(7,1) = getValuelabel (QH109);    {Type of Toilet}
      // CompareHH(9,1) = getValuelabel (QH132A);    {Has animals}
      xlat           = GHLATITUDE;
      xlong          = GHLONGITUDE;
      close(TJHH80);
      
      // now load case from original interview
      setfile(TJHH80, allhh, update);
      loadcase(TJHH80, QHCLUST, QHNUMBER);
      if !loadcase(TJHH80, QHCLUST, QHNUMBER) then
        errmsg("original household %d not found", QHNUMBER );
      endif;
     
      CompareHH(1,2) = edit("9999",QHNUMBER); {HH number in Main data }
      CompareHH(2,2) = tr("Original");            {Main questionnaire }
      CompareHH(3,2) = edit("Z9",count(QHSEC01X where QHLIVES = 1));   { total usual residents }
      CompareHH(4,2) = edit("Z9",count(QHSEC01X where QHLIVES <> 1 & QHSTAYED = 1));   { total visitors }
      CompareHH(5,2) = edit("Z9",QHWOMEN);    {Total number of women 15-49 }
      CompareHH(6,2) = edit("Z9",count(QHSEC01X where QHAGE <= 5));    {Total number of children 0-5 }
      CompareHH(7,2) = getValuelabel (QH128);    {Has animals}
      // CompareHH(6,2) = getValuelabel (QH101);    {Drinking water}
      // CompareHH(7,2) = getValuelabel (QH109);    {Type of Toilet}
      // CompareHH(8,2) = getValuelabel (QH128);    {Has animals}
      // CompareHH(9,2) = getValuelabel (QH132A);    {Has electricity}
      if GHLATITUDE & GHLONGITUDE & xlat & xlong then
        dd = gps(distance,GHLATITUDE,GHLONGITUDE,xlat,xlong);
      endif;
      if dd then
        CompareHH(8,1) = edit("ZZZ9",dd);    {distance}
        CompareHH(8,2) = edit("ZZZ9",dd);    {distance}
      else
        if xlat  then
          CompareHH(8,1) = edit("ZZZZZ9.999999",xlat) + ", " + edit("ZZZZZ9.999999",xlong);    {distance}
        else
          CompareHH(8,1) = tr( "Not recorded" );
        endif;
        if GHLATITUDE  then
          CompareHH(8,2) = edit("ZZZZZ9.999999",GHLATITUDE) + ", " + edit("ZZZZZ9.999999",GHLONGITUDE);    {distance}
        else
          CompareHH(8,2) = tr( "Not recorded" );
        endif;
      endif;

      {Write the result into the HTML}
      CellValues(1) = tr("Household Number");
      CellValues(2) = tr("Questionnaire Type");
      CellValues(3) = tr("Number usual residents");
      CellValues(4) = tr("Number visitors");
      CellValues(5) = tr("Number women 15-49");
      CellValues(6) = tr("Number children aged 0-5 years ");
      CellValues(7) = tr("Possession of livestock");
      // CellValues(6) = tr("Provenance d'eau de boisson");
      // CellValues(7) = tr("Type de toilette");
      // CellValues(8) = tr("Possede des animaux de la ferme");
      // CellValues(9) = tr("Electricite");
      CellValues(8) = tr("Distance in metres between location of the two interviews");

      { specify columns that are left aligned, strings are left aligned }
      CellAlign(1) = 6;  // column 6 is Address 
      CellAlign(2) = 7;  // column 4 HH head name 
      CellAlign(3) = 8;  // column 5 Result
      CellAlign(4) = 9;  // column 5 Result

      HTML_BeginTable( CellValues, "", 8 );

      do varying j = 1 while j <= 2
              do varying i = 1 while i <= 8
                      CellValues(i) = CompareHH(i,j);
              enddo;
              HTML_OneRow( CellValues, 8 );   // generates the HTML script for a row with relevant household data
      enddo;
      HTML_EndTable();
      HTML_Paragraph("");
    endif;
  enddo;
        

  HTML_End();
  close( HHFORINT );
  view( "file://" + pathname(application) +  HTMLName );
  stop(1);

