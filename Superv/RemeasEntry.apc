{Application 'REMEASENTER' logic file generated by CSPro}
PROC GLOBAL

  numeric ifok, xchange, incapi, biomcode, t;
  numeric diB, ldbH, udbH, agemnth, xtempd, xtempm, xtempy;
  numeric temp, agechild, dateflag; 
  numeric DaysMonth = 30.4375;
  string  textstr1;
  
 
  { function to close the interview }
  function endmessr();
    numeric xx = 2;
    { Returns true if response is REVIEW }
    xx = accept( tr("End of Remeasurement, do you want to:"),
                 tr("Review Remeasurement"),
                 tr("Finalize Remeasurement") );
    endmessr = ( xx = 1 );
  end;

  { setup basic user bar }
  function userbase();
    userbar( clear );
    userbar( add button, "<",    do("PreviousField") );
    userbar( add button, ">",    do("NextField") );
    userbar( add button, ">>|",  do("AdvanceToEnd") );
    userbar( add button, "Lang", do("ChangeLanguage") );
  end;

  { set value sets based on language }
  function OnChangeLanguage()
    SetLanguage( getlanguage() );
  end;

PROC FL_CNULL
preproc

  incapi   = tonumber( sysparm()[1:1] );
  biomcode = tonumber( sysparm()[2:4] );
  xchange  = 1;
  SetLanguage( getlanguage() );

  setfont( ValueSets, "Arial", 24, bold );

  set attributes( RMEASURE ) assisted off ( variable(title) );
  
  userbase();
  userbar( show );
  enter RMEASURE_FF;
  stop(1);

PROC RMEASURE_FORM
  if xchange then
    writecase( RMEASURE );
  endif;

PROC RAUXILIAR1
  clear( RMEASURE );
  ifok = selcase( RMEASURE, "", 10 ) include( RNUMBER, R102L, R102N, RADDRESS );
  if !ifok then
    warning( 100 ) select( tr("Return to selection"), $, tr("Continue"), continue );
    xchange = 0;
    endgroup
  endif;

PROC R115D
preproc
  if incapi then
    set attributes( $ ) protect;
    if visualvalue( $ ) = notappl then
      $ = sysdate( "DD" );
	endif;
  endif;

PROC R115M
preproc
  if incapi then
    set attributes( $ ) protect;
    if visualvalue( $ ) = notappl then
      $ = sysdate( "MM" );
	endif;
  endif;
  
PROC R115Y
preproc
  if incapi then
    set attributes( $ ) protect;
    if visualvalue( $ ) = notappl then
      $ = sysdate( "YYYY" );
	endif;
  endif;
  
postproc  
  xtempd = sysdate( "DD" );
  xtempm = sysdate( "MM" );
  xtempy = sysdate( "YYYY" );
  if R115Y > xtempy | R115Y = xtempy  & R115M > xtempm | 
     R115Y = xtempy & R115M = xtempm  & R115D > xtempd then
    errmsg( 200, xtempd, xtempm, xtempy ) select( tr("Remeasurement date"), R115_BLOCK );
  elseif R115Y < RFINTY | R115Y = RFINTY  & R115M < RFINTM | 
     R115Y = RFINTY & R115M = RFINTM & R115D < RFINTD then
    errmsg( 201, RFINTD, RFINTM, RFINTY ) select( tr("Remeasurement date"), R115_BLOCK, "Continue", continue );
  endif;

  { consistency of date of birth with re-measurement }
  numeric dii;
  if !DateOK( R103D, R103M, R103Y, R115D, R115M, R115Y ) then
    warning( 2145 ) 
	  select( tr("Remeasurement date"), R115_BLOCK,
	          tr("Continue"), continue );
  endif;

  { determine current age based of re-measurement date }
  if valid(R103D) & valid(R103M) & validyr(R103Y) then
    dii = CDCode( R115Y, R115M, R115D );
    dib = CDCode( R103Y, R103M, R103D );
	agemnth = int( (dii-dib)/DaysMonth );
  else
    dii = cmcode(R115M,R115Y);

    { Initialize logical ranges for date of birth of child }
    ldbH = dii - 71;
    udbH = dii;
    if validyr(R103Y) then
      ldbH = setlb(R103M,R103Y,0);
      udbH = setub(R103M,R103Y,9999);
    else
      ldbH = ldbH;
      udbH = udbH;
    endif;
    if !validyr(R103Y) | !valid(R103M) then
      { Lower bound of CMC }
      t = ndjlba(ldbH, udbH, dii, dii, RAGE );
      if t > 0 then
        ldbH = t
      endif;
      { Upper bound of CMC }
      t = adjuba(ldbH, udbH, dii, dii, RAGE );
      if t > 0 then
        udbH = t
      endif;
    endif;
    agemnth = dii - udbH;
  endif;
  
PROC R104
preproc
  $ = int(agemnth/12);
  
postproc  
  if !$ in 0:4 then
    warning( 0435 )
	  select( tr("Remeasurement date"), R115_BLOCK,
	          tr("Continue"), continue );
    if endmessr() then
      reenter R115_BLOCK
    else	
      endgroup
	endif;
  endif;

PROC R106
onfocus
  set attributes( $ ) native;

postproc
  if !$ in 99.90:99.98,missing then
    set attributes( $ ) hidden;
  else
    R106W = $;
    R107 = 7;
    advance;
  endif;

PROC R106W
  if R106 <> $ then
	$    = notappl;
	R106 = notappl;
    errmsg( 0442 ) select( tr("Initial weight"), R106 );
  endif;
PROC R107
preproc
  if visualvalue($) = 7 then
    noinput;
  endif;
postproc
  if $ = 7 & !R106 in 99.94:99.96 then
    errmsg("Non response code %d only allowed when non-response code entered for weight", $) select("Modify response", $, "Weight", R106);
  endif;
PROC R108
onfocus
  set attributes( $ ) native;
  textstr1 = tr("STANDING UP");
  if agemnth < 24 then
    textstr1 = tr("LYING DOWN");
  endif;

postproc
  if !$ in 999.0:999.8,missing then
    if $ in 20:140 & R106 in 0:40 & $ < R106 then
      errmsg( 0451, $, R106 ) select( tr("Weight"), R106, tr("Height"), $ );
    endif;
    set attributes( $ ) hidden;
  else
    R108W = $;
    R109 = 7;
    R110 = 7;
    R111 = "";
    R112 = 7;
    advance;
  endif;

PROC R108W
  if R108 <> $ then
	$    = notappl;
	R108 = notappl;
    errmsg( 0452 ) select( tr("Initial height"), R108 );
  endif;
  
PROC R109
preproc
  if visualvalue($) = 7 then
    noinput;
  endif;
postproc
  if agemnth < 24 & $ = 2 | agemnth > 23 & $ = 1 then
    warning( 0460 ) select( tr("Measure lying/standing"), $, tr("Continue"), continue );
  endif;
  if $ = 7 & !R106 in 99.94:99.96 then
    errmsg("Non response code %d only allowed when non-response code entered for weight", $) select("Modify response", $, "Weight", R106);
  endif;

PROC R110
preproc
  if visualvalue($) = 7 then
    noinput;
  endif;
postproc
  if (agemnth <= 23 & R109 = 1 | agemnth > 23 & R109 = 2) <=> $ <> 1 then
    errmsg( 0462, R104, R109 ) 
	  select( tr("Measure lying/standing"), R109, 
	          tr("Correct measure"), $ );
  endif;
  if $ = 7 & !R106 in 99.94:99.96 then
    errmsg("Non response code %d only allowed when non-response code entered for weight", $) select("Modify response", $, "Weight", R106);
  endif;
  
PROC R111
preproc
  if R110 in 1,7 then
    $ = " ";
    noinput
  endif;
  
onfocus
  temp = (R104 in 0:1 );
  
postproc
  if !R110 in 1,7 & !length(strip($)) then
    errmsg( 0463 ) select( tr("Reason not measured properly"), $ );
  endif;

PROC R113
  { Verify that fieldworker is registered }
  ICODE = $;
  if !incapi then
    if !loadcase( INTERV, ICODE ) then
      // errmsg( 0025, tr("Fieldworker"), $ ) select( tr("Fieldworker"), $ );
    elseif $ <> RBIOMARK then 
      warning( 0035, RBIOMARK )  select( tr("Fieldworker"), $, tr("Continue"), continue );
    endif;
  elseif $ <> biomcode then
    errmsg( 0036, biomcode ) select( tr("Fieldworker"), $ );
  endif;

PROC R114
  { Verify that fieldworker is registered }
  ICODE = $;
  if $ <> 9999 & !loadcase( INTERV, ICODE ) then
    // errmsg( 0025, tr("Assistant"), $ ) select( tr("Assistant"), $ );
  elseif $ = R113 then
    errmsg( 0030 ) select( tr("Assistant"), $ );
  endif;

PROC RZSWH
preproc
  { calculate Z-scores to determine if child has to be referred }
  dateflag = 9;
  if validyr(R103Y) & valid(R103M) then
    { Age of child in days }
	xtempd = R103D;
    if !xtempd in 1:31 then xtempd = 15 endif;
    agechild = CDCode( R115Y, R115M, R115D ) - CDCode( R103Y, R103M, xtempd );
    dateflag = 1;
  else
    agechild = 9999;
  endif;
  WHO_anthro( R106, R108, R109, RSEX, agechild, dateflag, R102L );
   
  $ = zwhz;

PROC RAUXILIAR2
preproc
  if RZSWH < (-3) then
    textstr1 = tr("Please use this information to complete the Referral form \n\n");
	textstr1 = textstr1 + maketext(tr("Name: %s \nAge in Months: %02d \n"), R102N, int(agechild/DaysMonth) );
	textstr1 = textstr1 + maketext(tr("Weight: %6.2f \nHeight: %6.1f \nWeight-for-height (Z-score): %6.2f"), 
	           R106, R108, RZSWH );
	putnote(textstr1);
	textstr1 = editnote();
  endif;

postproc
  if endmessr() then
    reenter
  endif;
  
